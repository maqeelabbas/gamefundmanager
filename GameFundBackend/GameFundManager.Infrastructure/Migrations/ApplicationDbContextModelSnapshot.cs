// <auto-generated />
using System;
using GameFundManager.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameFundManager.Infrastructure.Migrations;

[DbContext(typeof(ApplicationDbContext))]
partial class ApplicationDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "9.0.4")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("GameFundManager.Core.Entities.Contribution", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<decimal>("Amount")
                    .HasPrecision(18, 2)
                    .HasColumnType("decimal(18,2)");

                b.Property<DateTime>("ContributionDate")
                    .HasColumnType("datetime2");

                b.Property<Guid>("ContributorUserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<Guid>("CreatedByUserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)");

                b.Property<Guid>("GroupId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("PaymentMethod")
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("Status")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("TransactionReference")
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.HasIndex("ContributorUserId");

                b.HasIndex("CreatedByUserId");

                b.HasIndex("GroupId");

                b.ToTable("Contributions");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.Expense", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<decimal>("Amount")
                    .HasPrecision(18, 2)
                    .HasColumnType("decimal(18,2)");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<Guid>("CreatedByUserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<DateTime>("ExpenseDate")
                    .HasColumnType("datetime2");

                b.Property<Guid>("GroupId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("PaidByUserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("ReceiptUrl")
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)");

                b.Property<string>("Status")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.HasIndex("CreatedByUserId");

                b.HasIndex("GroupId");

                b.HasIndex("PaidByUserId");

                b.ToTable("Expenses");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.Group", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Currency")
                    .IsRequired()
                    .ValueGeneratedOnAdd()
                    .HasMaxLength(3)
                    .HasColumnType("nvarchar(3)")
                    .HasDefaultValue("USD");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<DateTime?>("DueDate")
                    .HasColumnType("datetime2");

                b.Property<bool>("IsActive")
                    .HasColumnType("bit");

                b.Property<string>("LogoUrl")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<Guid>("OwnerId")
                    .HasColumnType("uniqueidentifier");

                b.Property<decimal>("TargetAmount")
                    .HasPrecision(18, 2)
                    .HasColumnType("decimal(18,2)");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.HasIndex("OwnerId");

                b.ToTable("Groups");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.GroupMember", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<decimal>("ContributionQuota")
                    .ValueGeneratedOnAdd()
                    .HasPrecision(18, 2)
                    .HasColumnType("decimal(18,2)")
                    .HasDefaultValue(0m);

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<Guid>("GroupId")
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("IsActive")
                    .HasColumnType("bit");

                b.Property<bool>("IsAdmin")
                    .HasColumnType("bit");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("GroupId");

                b.HasIndex("UserId", "GroupId")
                    .IsUnique();

                b.ToTable("GroupMembers");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.Poll", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<Guid>("CreatedByUserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<DateTime>("ExpiryDate")
                    .HasColumnType("datetime2");

                b.Property<Guid>("GroupId")
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("IsActive")
                    .HasColumnType("bit");

                b.Property<string>("PollType")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.HasIndex("CreatedByUserId");

                b.HasIndex("GroupId");

                b.ToTable("Polls");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.PollOption", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<Guid>("PollId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Text")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.HasIndex("PollId");

                b.ToTable("PollOptions");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.PollVote", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<Guid>("PollId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("PollOptionId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("PollId");

                b.HasIndex("PollOptionId");

                b.HasIndex("UserId", "PollId")
                    .IsUnique();

                b.ToTable("PollVotes");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.User", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<bool>("IsActive")
                    .HasColumnType("bit");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("PasswordHash")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PhoneNumber")
                    .HasMaxLength(20)
                    .HasColumnType("nvarchar(20)");

                b.Property<string>("ProfilePictureUrl")
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.HasKey("Id");

                b.HasIndex("Email")
                    .IsUnique();

                b.HasIndex("Username")
                    .IsUnique();

                b.ToTable("Users");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.Contribution", b =>
            {
                b.HasOne("GameFundManager.Core.Entities.User", "ContributorUser")
                    .WithMany("Contributions")
                    .HasForeignKey("ContributorUserId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.HasOne("GameFundManager.Core.Entities.User", "CreatedByUser")
                    .WithMany()
                    .HasForeignKey("CreatedByUserId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.HasOne("GameFundManager.Core.Entities.Group", "Group")
                    .WithMany("Contributions")
                    .HasForeignKey("GroupId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("ContributorUser");

                b.Navigation("CreatedByUser");

                b.Navigation("Group");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.Expense", b =>
            {
                b.HasOne("GameFundManager.Core.Entities.User", "CreatedByUser")
                    .WithMany("Expenses")
                    .HasForeignKey("CreatedByUserId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.HasOne("GameFundManager.Core.Entities.Group", "Group")
                    .WithMany("Expenses")
                    .HasForeignKey("GroupId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("GameFundManager.Core.Entities.User", "PaidByUser")
                    .WithMany()
                    .HasForeignKey("PaidByUserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("CreatedByUser");

                b.Navigation("Group");

                b.Navigation("PaidByUser");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.Group", b =>
            {
                b.HasOne("GameFundManager.Core.Entities.User", "Owner")
                    .WithMany("OwnedGroups")
                    .HasForeignKey("OwnerId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.Navigation("Owner");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.GroupMember", b =>
            {
                b.HasOne("GameFundManager.Core.Entities.Group", "Group")
                    .WithMany("Members")
                    .HasForeignKey("GroupId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("GameFundManager.Core.Entities.User", "User")
                    .WithMany("Memberships")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Group");

                b.Navigation("User");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.Poll", b =>
            {
                b.HasOne("GameFundManager.Core.Entities.User", "CreatedByUser")
                    .WithMany()
                    .HasForeignKey("CreatedByUserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("GameFundManager.Core.Entities.Group", "Group")
                    .WithMany("Polls")
                    .HasForeignKey("GroupId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.Navigation("CreatedByUser");

                b.Navigation("Group");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.PollOption", b =>
            {
                b.HasOne("GameFundManager.Core.Entities.Poll", "Poll")
                    .WithMany("Options")
                    .HasForeignKey("PollId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.Navigation("Poll");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.PollVote", b =>
            {
                b.HasOne("GameFundManager.Core.Entities.Poll", "Poll")
                    .WithMany("Votes")
                    .HasForeignKey("PollId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("GameFundManager.Core.Entities.PollOption", "PollOption")
                    .WithMany("Votes")
                    .HasForeignKey("PollOptionId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("GameFundManager.Core.Entities.User", "User")
                    .WithMany("PollVotes")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.Navigation("Poll");

                b.Navigation("PollOption");

                b.Navigation("User");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.Group", b =>
            {
                b.Navigation("Contributions");

                b.Navigation("Expenses");

                b.Navigation("Members");

                b.Navigation("Polls");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.Poll", b =>
            {
                b.Navigation("Options");

                b.Navigation("Votes");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.PollOption", b =>
            {
                b.Navigation("Votes");
            });

        modelBuilder.Entity("GameFundManager.Core.Entities.User", b =>
            {
                b.Navigation("Contributions");

                b.Navigation("Expenses");

                b.Navigation("Memberships");

                b.Navigation("OwnedGroups");

                b.Navigation("PollVotes");
            });
#pragma warning restore 612, 618
    }
}
